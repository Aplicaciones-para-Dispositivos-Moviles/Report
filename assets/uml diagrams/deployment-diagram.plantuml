@startuml DeploymentDiagramRestock
title Software Architecture Deployment Diagram
skinparam shadowing false
skinparam componentStyle uml4
skinparam wrapWidth 220
skinparam maxMessageSize 220
left to right direction

' =======================
' CAPA 1: CLIENTES (SEGMENTOS)
' =======================
package "Clientes - Administradores de Restaurantes" {
  node "Web App (Angular SPA en Vercel)" as rest_web
  node "Mobile App (Kotlin)" as rest_mobile
}

package "Clientes - Proveedores" {
  node "Web App (Angular SPA en Vercel)" as prov_web
  node "Mobile App (Flutter)" as prov_mobile
}

' =======================
' CAPA 2: BACKEND
' =======================
package "Backend (Railway)" {
  node "Runtime Container (JVM)" as jvm {
    artifact "API REST\n - Spring Boot" <<artifact>> as be
  }
}

' =======================
' CAPA 3: DATA LAYER
' =======================
package "Data Layer" {
  database "Supabase (Postgres)\nAuth + DB + Realtime" as supabase #lightgreen
  database "MongoDB Atlas\nLogs / CatÃ¡logo flexible" as mongo #lightgreen
}

' =======================
' CAPA 4: SERVICIOS EXTERNOS
' =======================
package "Servicios Externos" {
  node "Cloudinary\n(Media Storage/CDN)" as cloudinary
  node "Stripe\n(Pagos)" as stripe
  node "SendGrid\n(Emails)" as sendgrid
  node "OneSignal/FCM\n(Notificaciones Push)" as pushsvc
}

' =======================
' FLUJOS
' =======================

' Restaurantes
rest_mobile --> be : REST (HTTPS)
rest_web --> be : REST (HTTPS)
rest_mobile ..> supabase : Auth + Realtime
rest_web ..> supabase : Auth + Realtime

' Proveedores
prov_web --> be : REST (HTTPS)
prov_web ..> supabase : Auth + Realtime
prov_mobile --> be : REST (HTTPS)
prov_mobile ..> supabase : Auth + Realtime

' Backend -> Data
be --> supabase : JDBC (TLS)
be ..> mongo : Logs/Analytics (TLS)

' Backend -> Servicios externos
be ..> cloudinary : Media upload
be ..> stripe : Payments
be ..> sendgrid : Emails
be ..> pushsvc : Push notifications

@enduml